{"version":3,"sources":["components/Form.js","components/Todo.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","inputText","setInputText","todos","setTodos","setStatus","onChange","e","target","value","type","className","onClick","preventDefault","text","completed","id","Math","random","name","Todo","textToDisplay","todo","map","item","filter","el","TodoList","filteredTodos","App","useState","status","setFilteredTodos","useEffect","getLocalTodos","filterHandler","saveLocalTodos","localStorage","setItem","JSON","stringify","getItem","todoLocal","parse","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAmDeA,EAhDF,SAAC,GAA6D,IAA3DC,EAA0D,EAA1DA,UAAWC,EAA+C,EAA/CA,aAAcC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,UAwBtD,OACI,iCACI,uBACIC,SAzBa,SAACC,GACtBL,EAAaK,EAAEC,OAAOC,QAyBdC,KAAK,OACLC,UAAU,aACVF,MAAOR,IAGX,wBAAQW,QA3BU,SAACL,GACvBA,EAAEM,iBACFT,EAAS,GAAD,mBAAKD,GAAL,CAAY,CAChBW,KAAMb,EACNc,WAAW,EACXC,GAAoB,IAAhBC,KAAKC,aAGbhB,EAAa,KAmB2BS,UAAU,cAAcD,KAAK,SAAjE,SACI,mBAAGC,UAAU,yBAGjB,qBAAKA,UAAU,SAAf,SACI,yBAAQL,SApBE,SAACC,GAEnBF,EAAUE,EAAEC,OAAOC,QAkBsBU,KAAK,QAAQR,UAAU,cAAxD,UACI,wBAAQF,MAAM,MAAd,iBACA,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,cAAd,kC,OCOLW,EA9CF,SAAC,GAA8C,IAA5CC,EAA2C,EAA3CA,cAAeC,EAA4B,EAA5BA,KAAMnB,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SA8BxC,OACI,sBAAKO,UAAU,OAAf,UAEI,oBAAIA,UAAS,oBAAeW,EAAKP,UAAY,YAAc,IAA3D,SAAmEM,IAEnE,wBAAQT,QArBQ,WACpBR,EAASD,EAAMoB,KAAI,SAACC,GAGhB,OAAIA,EAAKR,KAAOM,EAAKN,GACV,2BACAQ,GADP,IACaT,WAAYS,EAAKT,YAG3BS,OAY2Bb,UAAU,eAA5C,SAA2D,mBAAGA,UAAU,mBAExE,wBAAQC,QAnChB,WAGIR,EAASD,EAAMsB,QAAO,SAAAC,GAClB,OAAOA,EAAGV,KAAOM,EAAKN,QA+BUL,UAAU,YAA1C,SAAsD,mBAAGA,UAAU,uBCdhEgB,EAzBE,SAAC,GAAwC,IAAtCxB,EAAqC,EAArCA,MAAOC,EAA8B,EAA9BA,SAAUwB,EAAoB,EAApBA,cAEjC,OACI,qBAAKjB,UAAU,iBAAf,SAEI,oBAAIA,UAAU,YAAd,SAEQiB,EAAcL,KAAI,SAACD,GACf,OACI,cAAC,EAAD,CAEID,cAAeC,EAAKR,KACpBX,MAAOA,EACPmB,KAAMA,EACNlB,SAAUA,GAJLkB,EAAKN,YC2E3Ba,EA9EH,WAAO,IAAD,EAKkBC,mBAAS,IAL3B,mBAKT7B,EALS,KAKEC,EALF,OAMU4B,mBAAS,IANnB,mBAMT3B,EANS,KAMFC,EANE,OAQY0B,mBAAS,OARrB,mBAQTC,EARS,KAQD1B,EARC,OAS0ByB,mBAAS,IATnC,mBASTF,EATS,KASMI,EATN,KAYhBC,qBAAU,WACRC,MACC,IAEHD,qBAAU,YA6BV,WACE,OAAQF,GACN,IAAK,YAAaC,EAAiB7B,EAAMsB,QAAO,SAAAH,GAAI,OAAuB,IAAnBA,EAAKP,cAC3D,MAEF,IAAK,cAAeiB,EAAiB7B,EAAMsB,QAAO,SAAAH,GAAI,OAAuB,IAAnBA,EAAKP,cAC7D,MAEF,QAASiB,EAAiB7B,IApC5BgC,GACAC,MACC,CAACjC,EAAO4B,IAIX,IAAMK,EAAiB,WACrBC,aAAaC,QAAQ,QAASC,KAAKC,UAAUrC,KAGzC+B,EAAgB,WACpB,GAAsC,OAAlCG,aAAaI,QAAQ,SACvBJ,aAAaC,QAAQ,QAASC,KAAKC,UAAU,SAE1C,CACH,IAAIE,EAAYH,KAAKI,MAAMN,aAAaI,QAAQ,UAChDG,QAAQC,IAAIH,GACZtC,EAASsC,KAuBb,OACE,sBAAK/B,UAAU,MAAf,UACE,iCACE,6CAGF,cAAC,EAAD,CACEV,UAAWA,EACXC,aAAcA,EACdC,MAAOA,EACPC,SAAUA,EACVC,UAAWA,IAIb,cAAC,EAAD,CAAUD,SAAUA,EAAUD,MAAOA,EAAOyB,cAAeA,QCtElDkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.cb6ae768.chunk.js","sourcesContent":["import React from 'react';\n\n\nconst Form = ({ inputText, setInputText, todos, setTodos, setStatus }) => {\n\n    const inputTextHandler = (e) => {\n        setInputText(e.target.value);\n    }\n\n    const submitTodoHandler = (e) => {\n        e.preventDefault();\n        setTodos([...todos, {\n            text: inputText,\n            completed: false,\n            id: Math.random() * 1000\n        }]\n        )\n        setInputText(\"\");\n    }\n\n\n    const statusHandler = (e) => {\n        // console.log(e.target.value);\n        setStatus(e.target.value);\n    }\n\n\n    return (\n        <form>\n            <input\n                onChange={inputTextHandler}\n                type=\"text\"\n                className=\"todo-input\"\n                value={inputText}\n            />\n\n            <button onClick={submitTodoHandler} className=\"todo-button\" type=\"submit\">\n                <i className=\"fas fa-plus-square\"></i>\n            </button>\n\n            <div className=\"select\">\n                <select onChange={statusHandler} name=\"todos\" className=\"filter-todo\">\n                    <option value=\"all\">All</option>\n                    <option value=\"completed\">Completed</option>\n                    <option value=\"uncompleted\">Uncompleted</option>\n                </select>\n            </div>\n        </form>\n    );\n}\n\nexport default Form;","import React from \"react\";\n\n//import components\n\n\nconst Todo = ({ textToDisplay, todo, todos, setTodos }) => {\n\n    function deleteHandler() {\n        // console.log(todo);\n\n        setTodos(todos.filter(el => {\n            return el.id !== todo.id\n        }\n        ));\n\n    }\n\n\n\n    const completeHandler = () => {\n        setTodos(todos.map((item) => {\n\n            // console.log(item);\n            if (item.id === todo.id) {\n                return {\n                    ...item, completed: !item.completed\n                }\n            }\n            return item;\n\n        }));\n    }\n\n\n\n    return (\n        <div className=\"todo\">\n\n            <li className={`todo-item ${todo.completed ? \"completed\" : \"\"}`} >{textToDisplay}</li>\n\n            <button onClick={completeHandler} className=\"complete-btn\"><i className=\"fas fa-check\"></i></button>\n\n            <button onClick={deleteHandler} className=\"trash-btn\"><i className=\"fas fa-trash\"></i></button>\n\n        </div >\n    );\n}\n\n\n\n\nexport default Todo;","import React from 'react';\nimport Todo from \"./Todo\"\n\nconst TodoList = ({ todos, setTodos, filteredTodos }) => {\n    // console.log(todos);\n    return (\n        <div className=\"todo-container\">\n\n            <ul className=\"todo-list\">\n                {\n                    filteredTodos.map((todo) => {\n                        return (\n                            <Todo\n                                key={todo.id}\n                                textToDisplay={todo.text}\n                                todos={todos}\n                                todo={todo}\n                                setTodos={setTodos}\n                            />\n                        )\n                    })\n                }\n            </ul>\n\n        </div>\n    )\n}\n\nexport default TodoList;","import React, { useState, useEffect } from 'react';\nimport './App.css'\n\n\n//components\nimport \"./components/Form\"\nimport Form from './components/Form';\nimport TodoList from './components/TodoList';\n\n\nconst App = () => {\n\n\n\n\n  const [inputText, setInputText] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n\n  const [status, setStatus] = useState(\"all\");\n  const [filteredTodos, setFilteredTodos] = useState([]);\n\n  //useEffect  \n  useEffect(() => {\n    getLocalTodos();\n  }, [])\n\n  useEffect(() => {\n    filterHandler();\n    saveLocalTodos();\n  }, [todos, status])\n  //for localStorage\n\n\n  const saveLocalTodos = () => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  }\n\n  const getLocalTodos = () => {\n    if (localStorage.getItem(\"todos\") === null) {\n      localStorage.setItem(\"todos\", JSON.stringify([]));\n    }\n    else {\n      let todoLocal = JSON.parse(localStorage.getItem(\"todos\"));\n      console.log(todoLocal);\n      setTodos(todoLocal);\n    }\n\n  }\n\n\n\n\n\n\n\n  function filterHandler() {\n    switch (status) {\n      case 'completed': setFilteredTodos(todos.filter(todo => todo.completed === true));\n        break;\n\n      case 'uncompleted': setFilteredTodos(todos.filter(todo => todo.completed === false))\n        break;\n\n      default: setFilteredTodos(todos);\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Todo list</h1>\n      </header>\n\n      <Form\n        inputText={inputText}\n        setInputText={setInputText}\n        todos={todos}\n        setTodos={setTodos}\n        setStatus={setStatus}\n      />\n\n\n      <TodoList setTodos={setTodos} todos={todos} filteredTodos={filteredTodos} />\n\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}